// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_msg/geolocation/geo_statistic.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "client_msg/geolocation/geo_statistic.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace external {
namespace client {
namespace geolocation {
class Statistic_ItemDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Statistic_Item>
     _instance;
} _Statistic_Item_default_instance_;
class StatisticDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Statistic>
     _instance;
} _Statistic_default_instance_;

namespace protobuf_client_5fmsg_2fgeolocation_2fgeo_5fstatistic_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Statistic_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Statistic_Item, signal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Statistic_Item, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Statistic_Item, total_samples_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Statistic_Item, received_samples_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Statistic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Statistic, item_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Statistic_Item)},
  { 9, -1, sizeof(Statistic)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Statistic_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Statistic_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "client_msg/geolocation/geo_statistic.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::external::client::protobuf_client_5fmsg_2fcommon_2eproto::InitDefaults();
  _Statistic_Item_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Statistic_Item_default_instance_);_Statistic_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Statistic_default_instance_);_Statistic_Item_default_instance_._instance.get_mutable()->signal_ = const_cast< ::external::client::Signal*>(
      ::external::client::Signal::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*client_msg/geolocation/geo_statistic.p"
      "roto\022\033external.client.geolocation\032\027clien"
      "t_msg/common.proto\"\234\002\n\tStatistic\0229\n\004item"
      "\030\001 \003(\0132+.external.client.geolocation.Sta"
      "tistic.Item\032\235\001\n\004Item\022\'\n\006signal\030\001 \001(\0132\027.e"
      "xternal.client.Signal\022;\n\005state\030\002 \001(\0162,.e"
      "xternal.client.geolocation.Statistic.Sta"
      "te\022\025\n\rtotal_samples\030\003 \001(\004\022\030\n\020received_sa"
      "mples\030\004 \001(\004\"4\n\005State\022\013\n\007WAITING\020\000\022\r\n\tREC"
      "EIVING\020\001\022\017\n\013CALCULATING\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 393);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "client_msg/geolocation/geo_statistic.proto", &protobuf_RegisterTypes);
  ::external::client::protobuf_client_5fmsg_2fcommon_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_client_5fmsg_2fgeolocation_2fgeo_5fstatistic_2eproto

const ::google::protobuf::EnumDescriptor* Statistic_State_descriptor() {
  protobuf_client_5fmsg_2fgeolocation_2fgeo_5fstatistic_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fmsg_2fgeolocation_2fgeo_5fstatistic_2eproto::file_level_enum_descriptors[0];
}
bool Statistic_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Statistic_State Statistic::WAITING;
const Statistic_State Statistic::RECEIVING;
const Statistic_State Statistic::CALCULATING;
const Statistic_State Statistic::State_MIN;
const Statistic_State Statistic::State_MAX;
const int Statistic::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Statistic_Item::kSignalFieldNumber;
const int Statistic_Item::kStateFieldNumber;
const int Statistic_Item::kTotalSamplesFieldNumber;
const int Statistic_Item::kReceivedSamplesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Statistic_Item::Statistic_Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fmsg_2fgeolocation_2fgeo_5fstatistic_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:external.client.geolocation.Statistic.Item)
}
Statistic_Item::Statistic_Item(const Statistic_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_signal()) {
    signal_ = new ::external::client::Signal(*from.signal_);
  } else {
    signal_ = NULL;
  }
  ::memcpy(&total_samples_, &from.total_samples_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&total_samples_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:external.client.geolocation.Statistic.Item)
}

void Statistic_Item::SharedCtor() {
  ::memset(&signal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&signal_)) + sizeof(state_));
  _cached_size_ = 0;
}

Statistic_Item::~Statistic_Item() {
  // @@protoc_insertion_point(destructor:external.client.geolocation.Statistic.Item)
  SharedDtor();
}

void Statistic_Item::SharedDtor() {
  if (this != internal_default_instance()) delete signal_;
}

void Statistic_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Statistic_Item::descriptor() {
  protobuf_client_5fmsg_2fgeolocation_2fgeo_5fstatistic_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fmsg_2fgeolocation_2fgeo_5fstatistic_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Statistic_Item& Statistic_Item::default_instance() {
  protobuf_client_5fmsg_2fgeolocation_2fgeo_5fstatistic_2eproto::InitDefaults();
  return *internal_default_instance();
}

Statistic_Item* Statistic_Item::New(::google::protobuf::Arena* arena) const {
  Statistic_Item* n = new Statistic_Item;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Statistic_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:external.client.geolocation.Statistic.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && signal_ != NULL) {
    delete signal_;
  }
  signal_ = NULL;
  ::memset(&total_samples_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&total_samples_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool Statistic_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:external.client.geolocation.Statistic.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .external.client.Signal signal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_signal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .external.client.geolocation.Statistic.State state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::external::client::geolocation::Statistic_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 total_samples = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_samples_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 received_samples = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &received_samples_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:external.client.geolocation.Statistic.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:external.client.geolocation.Statistic.Item)
  return false;
#undef DO_
}

void Statistic_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:external.client.geolocation.Statistic.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .external.client.Signal signal = 1;
  if (this->has_signal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->signal_, output);
  }

  // .external.client.geolocation.Statistic.State state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // uint64 total_samples = 3;
  if (this->total_samples() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->total_samples(), output);
  }

  // uint64 received_samples = 4;
  if (this->received_samples() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->received_samples(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:external.client.geolocation.Statistic.Item)
}

::google::protobuf::uint8* Statistic_Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:external.client.geolocation.Statistic.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .external.client.Signal signal = 1;
  if (this->has_signal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->signal_, deterministic, target);
  }

  // .external.client.geolocation.Statistic.State state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // uint64 total_samples = 3;
  if (this->total_samples() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->total_samples(), target);
  }

  // uint64 received_samples = 4;
  if (this->received_samples() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->received_samples(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:external.client.geolocation.Statistic.Item)
  return target;
}

size_t Statistic_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:external.client.geolocation.Statistic.Item)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .external.client.Signal signal = 1;
  if (this->has_signal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->signal_);
  }

  // uint64 total_samples = 3;
  if (this->total_samples() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total_samples());
  }

  // uint64 received_samples = 4;
  if (this->received_samples() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->received_samples());
  }

  // .external.client.geolocation.Statistic.State state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Statistic_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:external.client.geolocation.Statistic.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const Statistic_Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Statistic_Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:external.client.geolocation.Statistic.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:external.client.geolocation.Statistic.Item)
    MergeFrom(*source);
  }
}

void Statistic_Item::MergeFrom(const Statistic_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:external.client.geolocation.Statistic.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_signal()) {
    mutable_signal()->::external::client::Signal::MergeFrom(from.signal());
  }
  if (from.total_samples() != 0) {
    set_total_samples(from.total_samples());
  }
  if (from.received_samples() != 0) {
    set_received_samples(from.received_samples());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void Statistic_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:external.client.geolocation.Statistic.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Statistic_Item::CopyFrom(const Statistic_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:external.client.geolocation.Statistic.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Statistic_Item::IsInitialized() const {
  return true;
}

void Statistic_Item::Swap(Statistic_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Statistic_Item::InternalSwap(Statistic_Item* other) {
  using std::swap;
  swap(signal_, other->signal_);
  swap(total_samples_, other->total_samples_);
  swap(received_samples_, other->received_samples_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Statistic_Item::GetMetadata() const {
  protobuf_client_5fmsg_2fgeolocation_2fgeo_5fstatistic_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fmsg_2fgeolocation_2fgeo_5fstatistic_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Statistic_Item

// .external.client.Signal signal = 1;
bool Statistic_Item::has_signal() const {
  return this != internal_default_instance() && signal_ != NULL;
}
void Statistic_Item::clear_signal() {
  if (GetArenaNoVirtual() == NULL && signal_ != NULL) delete signal_;
  signal_ = NULL;
}
const ::external::client::Signal& Statistic_Item::signal() const {
  const ::external::client::Signal* p = signal_;
  // @@protoc_insertion_point(field_get:external.client.geolocation.Statistic.Item.signal)
  return p != NULL ? *p : *reinterpret_cast<const ::external::client::Signal*>(
      &::external::client::_Signal_default_instance_);
}
::external::client::Signal* Statistic_Item::mutable_signal() {
  
  if (signal_ == NULL) {
    signal_ = new ::external::client::Signal;
  }
  // @@protoc_insertion_point(field_mutable:external.client.geolocation.Statistic.Item.signal)
  return signal_;
}
::external::client::Signal* Statistic_Item::release_signal() {
  // @@protoc_insertion_point(field_release:external.client.geolocation.Statistic.Item.signal)
  
  ::external::client::Signal* temp = signal_;
  signal_ = NULL;
  return temp;
}
void Statistic_Item::set_allocated_signal(::external::client::Signal* signal) {
  delete signal_;
  signal_ = signal;
  if (signal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:external.client.geolocation.Statistic.Item.signal)
}

// .external.client.geolocation.Statistic.State state = 2;
void Statistic_Item::clear_state() {
  state_ = 0;
}
::external::client::geolocation::Statistic_State Statistic_Item::state() const {
  // @@protoc_insertion_point(field_get:external.client.geolocation.Statistic.Item.state)
  return static_cast< ::external::client::geolocation::Statistic_State >(state_);
}
void Statistic_Item::set_state(::external::client::geolocation::Statistic_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:external.client.geolocation.Statistic.Item.state)
}

// uint64 total_samples = 3;
void Statistic_Item::clear_total_samples() {
  total_samples_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Statistic_Item::total_samples() const {
  // @@protoc_insertion_point(field_get:external.client.geolocation.Statistic.Item.total_samples)
  return total_samples_;
}
void Statistic_Item::set_total_samples(::google::protobuf::uint64 value) {
  
  total_samples_ = value;
  // @@protoc_insertion_point(field_set:external.client.geolocation.Statistic.Item.total_samples)
}

// uint64 received_samples = 4;
void Statistic_Item::clear_received_samples() {
  received_samples_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Statistic_Item::received_samples() const {
  // @@protoc_insertion_point(field_get:external.client.geolocation.Statistic.Item.received_samples)
  return received_samples_;
}
void Statistic_Item::set_received_samples(::google::protobuf::uint64 value) {
  
  received_samples_ = value;
  // @@protoc_insertion_point(field_set:external.client.geolocation.Statistic.Item.received_samples)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Statistic::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Statistic::Statistic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fmsg_2fgeolocation_2fgeo_5fstatistic_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:external.client.geolocation.Statistic)
}
Statistic::Statistic(const Statistic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_(from.item_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:external.client.geolocation.Statistic)
}

void Statistic::SharedCtor() {
  _cached_size_ = 0;
}

Statistic::~Statistic() {
  // @@protoc_insertion_point(destructor:external.client.geolocation.Statistic)
  SharedDtor();
}

void Statistic::SharedDtor() {
}

void Statistic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Statistic::descriptor() {
  protobuf_client_5fmsg_2fgeolocation_2fgeo_5fstatistic_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fmsg_2fgeolocation_2fgeo_5fstatistic_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Statistic& Statistic::default_instance() {
  protobuf_client_5fmsg_2fgeolocation_2fgeo_5fstatistic_2eproto::InitDefaults();
  return *internal_default_instance();
}

Statistic* Statistic::New(::google::protobuf::Arena* arena) const {
  Statistic* n = new Statistic;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Statistic::Clear() {
// @@protoc_insertion_point(message_clear_start:external.client.geolocation.Statistic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  _internal_metadata_.Clear();
}

bool Statistic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:external.client.geolocation.Statistic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .external.client.geolocation.Statistic.Item item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:external.client.geolocation.Statistic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:external.client.geolocation.Statistic)
  return false;
#undef DO_
}

void Statistic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:external.client.geolocation.Statistic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .external.client.geolocation.Statistic.Item item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:external.client.geolocation.Statistic)
}

::google::protobuf::uint8* Statistic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:external.client.geolocation.Statistic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .external.client.geolocation.Statistic.Item item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->item(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:external.client.geolocation.Statistic)
  return target;
}

size_t Statistic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:external.client.geolocation.Statistic)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .external.client.geolocation.Statistic.Item item = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->item_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Statistic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:external.client.geolocation.Statistic)
  GOOGLE_DCHECK_NE(&from, this);
  const Statistic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Statistic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:external.client.geolocation.Statistic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:external.client.geolocation.Statistic)
    MergeFrom(*source);
  }
}

void Statistic::MergeFrom(const Statistic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:external.client.geolocation.Statistic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
}

void Statistic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:external.client.geolocation.Statistic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Statistic::CopyFrom(const Statistic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:external.client.geolocation.Statistic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Statistic::IsInitialized() const {
  return true;
}

void Statistic::Swap(Statistic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Statistic::InternalSwap(Statistic* other) {
  using std::swap;
  item_.InternalSwap(&other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Statistic::GetMetadata() const {
  protobuf_client_5fmsg_2fgeolocation_2fgeo_5fstatistic_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fmsg_2fgeolocation_2fgeo_5fstatistic_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Statistic

// repeated .external.client.geolocation.Statistic.Item item = 1;
int Statistic::item_size() const {
  return item_.size();
}
void Statistic::clear_item() {
  item_.Clear();
}
const ::external::client::geolocation::Statistic_Item& Statistic::item(int index) const {
  // @@protoc_insertion_point(field_get:external.client.geolocation.Statistic.item)
  return item_.Get(index);
}
::external::client::geolocation::Statistic_Item* Statistic::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:external.client.geolocation.Statistic.item)
  return item_.Mutable(index);
}
::external::client::geolocation::Statistic_Item* Statistic::add_item() {
  // @@protoc_insertion_point(field_add:external.client.geolocation.Statistic.item)
  return item_.Add();
}
::google::protobuf::RepeatedPtrField< ::external::client::geolocation::Statistic_Item >*
Statistic::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:external.client.geolocation.Statistic.item)
  return &item_;
}
const ::google::protobuf::RepeatedPtrField< ::external::client::geolocation::Statistic_Item >&
Statistic::item() const {
  // @@protoc_insertion_point(field_list:external.client.geolocation.Statistic.item)
  return item_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace geolocation
}  // namespace client
}  // namespace external

// @@protoc_insertion_point(global_scope)
