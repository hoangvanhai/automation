// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_msg/test/sensor_configuration.proto

#ifndef PROTOBUF_client_5fmsg_2ftest_2fsensor_5fconfiguration_2eproto__INCLUDED
#define PROTOBUF_client_5fmsg_2ftest_2fsensor_5fconfiguration_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "client_msg/common.pb.h"
// @@protoc_insertion_point(includes)
namespace external {
namespace client {
namespace test {
class ConfigureSensor;
class ConfigureSensorDefaultTypeInternal;
extern ConfigureSensorDefaultTypeInternal _ConfigureSensor_default_instance_;
}  // namespace test
}  // namespace client
}  // namespace external

namespace external {
namespace client {
namespace test {

namespace protobuf_client_5fmsg_2ftest_2fsensor_5fconfiguration_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_client_5fmsg_2ftest_2fsensor_5fconfiguration_2eproto

// ===================================================================

class ConfigureSensor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:external.client.test.ConfigureSensor) */ {
 public:
  ConfigureSensor();
  virtual ~ConfigureSensor();

  ConfigureSensor(const ConfigureSensor& from);

  inline ConfigureSensor& operator=(const ConfigureSensor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigureSensor(ConfigureSensor&& from) noexcept
    : ConfigureSensor() {
    *this = ::std::move(from);
  }

  inline ConfigureSensor& operator=(ConfigureSensor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigureSensor& default_instance();

  static inline const ConfigureSensor* internal_default_instance() {
    return reinterpret_cast<const ConfigureSensor*>(
               &_ConfigureSensor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ConfigureSensor* other);
  friend void swap(ConfigureSensor& a, ConfigureSensor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigureSensor* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigureSensor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfigureSensor& from);
  void MergeFrom(const ConfigureSensor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfigureSensor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .external.client.Sensor sensor = 1;
  int sensor_size() const;
  void clear_sensor();
  static const int kSensorFieldNumber = 1;
  const ::external::client::Sensor& sensor(int index) const;
  ::external::client::Sensor* mutable_sensor(int index);
  ::external::client::Sensor* add_sensor();
  ::google::protobuf::RepeatedPtrField< ::external::client::Sensor >*
      mutable_sensor();
  const ::google::protobuf::RepeatedPtrField< ::external::client::Sensor >&
      sensor() const;

  // @@protoc_insertion_point(class_scope:external.client.test.ConfigureSensor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::external::client::Sensor > sensor_;
  mutable int _cached_size_;
  friend struct protobuf_client_5fmsg_2ftest_2fsensor_5fconfiguration_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConfigureSensor

// repeated .external.client.Sensor sensor = 1;
inline int ConfigureSensor::sensor_size() const {
  return sensor_.size();
}
inline void ConfigureSensor::clear_sensor() {
  sensor_.Clear();
}
inline const ::external::client::Sensor& ConfigureSensor::sensor(int index) const {
  // @@protoc_insertion_point(field_get:external.client.test.ConfigureSensor.sensor)
  return sensor_.Get(index);
}
inline ::external::client::Sensor* ConfigureSensor::mutable_sensor(int index) {
  // @@protoc_insertion_point(field_mutable:external.client.test.ConfigureSensor.sensor)
  return sensor_.Mutable(index);
}
inline ::external::client::Sensor* ConfigureSensor::add_sensor() {
  // @@protoc_insertion_point(field_add:external.client.test.ConfigureSensor.sensor)
  return sensor_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::external::client::Sensor >*
ConfigureSensor::mutable_sensor() {
  // @@protoc_insertion_point(field_mutable_list:external.client.test.ConfigureSensor.sensor)
  return &sensor_;
}
inline const ::google::protobuf::RepeatedPtrField< ::external::client::Sensor >&
ConfigureSensor::sensor() const {
  // @@protoc_insertion_point(field_list:external.client.test.ConfigureSensor.sensor)
  return sensor_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace test
}  // namespace client
}  // namespace external

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_5fmsg_2ftest_2fsensor_5fconfiguration_2eproto__INCLUDED
