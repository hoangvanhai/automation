// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_msg/msg.proto

#ifndef PROTOBUF_client_5fmsg_2fmsg_2eproto__INCLUDED
#define PROTOBUF_client_5fmsg_2fmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include "client_msg/common.pb.h"
// @@protoc_insertion_point(includes)
namespace external {
namespace client {
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class Rpc;
class RpcDefaultTypeInternal;
extern RpcDefaultTypeInternal _Rpc_default_instance_;
}  // namespace client
}  // namespace external

namespace external {
namespace client {

namespace protobuf_client_5fmsg_2fmsg_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_client_5fmsg_2fmsg_2eproto

enum Type {
  RESPONSE = 0,
  PING = 1,
  PONG = 2,
  AUTHENTICATION = 3,
  PERMISSION = 4,
  DATA_CHANNEL = 5,
  MISSION = 10,
  ONLINE = 11,
  SIGNAL_CALC = 12,
  NOISEFLOOR = 13,
  REMOTE_SENSOR = 14,
  LOCAL_SENSOR = 15,
  SENSOR = 16,
  SERVER = 17,
  SPECTRUM_OFFLINE = 50,
  SIGNAL = 51,
  GEOLOCATION = 52,
  CLASSIFICATION = 53,
  RECORDING = 54,
  DEMODULATION = 55,
  AUTOMATION = 56,
  CALIBRATION = 100,
  TEST = 150,
  Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Type_IsValid(int value);
const Type Type_MIN = RESPONSE;
const Type Type_MAX = TEST;
const int Type_ARRAYSIZE = Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Type_descriptor();
inline const ::std::string& Type_Name(Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Type_descriptor(), value);
}
inline bool Type_Parse(
    const ::std::string& name, Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Type>(
    Type_descriptor(), name, value);
}
// ===================================================================

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:external.client.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Message* other);
  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const PROTOBUF_FINAL { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Any data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* mutable_data();
  ::google::protobuf::Any* release_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // .external.client.Rpc rpc = 3;
  bool has_rpc() const;
  void clear_rpc();
  static const int kRpcFieldNumber = 3;
  const ::external::client::Rpc& rpc() const;
  ::external::client::Rpc* mutable_rpc();
  ::external::client::Rpc* release_rpc();
  void set_allocated_rpc(::external::client::Rpc* rpc);

  // .external.client.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::external::client::Type type() const;
  void set_type(::external::client::Type value);

  // @@protoc_insertion_point(class_scope:external.client.Message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Any* data_;
  ::external::client::Rpc* rpc_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_client_5fmsg_2fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Rpc : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:external.client.Rpc) */ {
 public:
  Rpc();
  virtual ~Rpc();

  Rpc(const Rpc& from);

  inline Rpc& operator=(const Rpc& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Rpc(Rpc&& from) noexcept
    : Rpc() {
    *this = ::std::move(from);
  }

  inline Rpc& operator=(Rpc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Rpc& default_instance();

  static inline const Rpc* internal_default_instance() {
    return reinterpret_cast<const Rpc*>(
               &_Rpc_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Rpc* other);
  friend void swap(Rpc& a, Rpc& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Rpc* New() const PROTOBUF_FINAL { return New(NULL); }

  Rpc* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Rpc& from);
  void MergeFrom(const Rpc& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Rpc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:external.client.Rpc)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 id_;
  mutable int _cached_size_;
  friend struct protobuf_client_5fmsg_2fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:external.client.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .external.client.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::external::client::Error& error() const;
  ::external::client::Error* mutable_error();
  ::external::client::Error* release_error();
  void set_allocated_error(::external::client::Error* error);

  // @@protoc_insertion_point(class_scope:external.client.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::external::client::Error* error_;
  mutable int _cached_size_;
  friend struct protobuf_client_5fmsg_2fmsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Message

// .external.client.Type type = 1;
inline void Message::clear_type() {
  type_ = 0;
}
inline ::external::client::Type Message::type() const {
  // @@protoc_insertion_point(field_get:external.client.Message.type)
  return static_cast< ::external::client::Type >(type_);
}
inline void Message::set_type(::external::client::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:external.client.Message.type)
}

// .google.protobuf.Any data = 2;
inline bool Message::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void Message::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::google::protobuf::Any& Message::data() const {
  const ::google::protobuf::Any* p = data_;
  // @@protoc_insertion_point(field_get:external.client.Message.data)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* Message::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:external.client.Message.data)
  return data_;
}
inline ::google::protobuf::Any* Message::release_data() {
  // @@protoc_insertion_point(field_release:external.client.Message.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
inline void Message::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:external.client.Message.data)
}

// .external.client.Rpc rpc = 3;
inline bool Message::has_rpc() const {
  return this != internal_default_instance() && rpc_ != NULL;
}
inline void Message::clear_rpc() {
  if (GetArenaNoVirtual() == NULL && rpc_ != NULL) delete rpc_;
  rpc_ = NULL;
}
inline const ::external::client::Rpc& Message::rpc() const {
  const ::external::client::Rpc* p = rpc_;
  // @@protoc_insertion_point(field_get:external.client.Message.rpc)
  return p != NULL ? *p : *reinterpret_cast<const ::external::client::Rpc*>(
      &::external::client::_Rpc_default_instance_);
}
inline ::external::client::Rpc* Message::mutable_rpc() {
  
  if (rpc_ == NULL) {
    rpc_ = new ::external::client::Rpc;
  }
  // @@protoc_insertion_point(field_mutable:external.client.Message.rpc)
  return rpc_;
}
inline ::external::client::Rpc* Message::release_rpc() {
  // @@protoc_insertion_point(field_release:external.client.Message.rpc)
  
  ::external::client::Rpc* temp = rpc_;
  rpc_ = NULL;
  return temp;
}
inline void Message::set_allocated_rpc(::external::client::Rpc* rpc) {
  delete rpc_;
  rpc_ = rpc;
  if (rpc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:external.client.Message.rpc)
}

// -------------------------------------------------------------------

// Rpc

// uint64 id = 1;
inline void Rpc::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Rpc::id() const {
  // @@protoc_insertion_point(field_get:external.client.Rpc.id)
  return id_;
}
inline void Rpc::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:external.client.Rpc.id)
}

// -------------------------------------------------------------------

// Response

// .external.client.Error error = 1;
inline bool Response::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void Response::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::external::client::Error& Response::error() const {
  const ::external::client::Error* p = error_;
  // @@protoc_insertion_point(field_get:external.client.Response.error)
  return p != NULL ? *p : *reinterpret_cast<const ::external::client::Error*>(
      &::external::client::_Error_default_instance_);
}
inline ::external::client::Error* Response::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::external::client::Error;
  }
  // @@protoc_insertion_point(field_mutable:external.client.Response.error)
  return error_;
}
inline ::external::client::Error* Response::release_error() {
  // @@protoc_insertion_point(field_release:external.client.Response.error)
  
  ::external::client::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void Response::set_allocated_error(::external::client::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:external.client.Response.error)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace client
}  // namespace external

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::external::client::Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::external::client::Type>() {
  return ::external::client::Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_5fmsg_2fmsg_2eproto__INCLUDED
