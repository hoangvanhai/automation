// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_msg/signal/signal_query.proto

#ifndef PROTOBUF_client_5fmsg_2fsignal_2fsignal_5fquery_2eproto__INCLUDED
#define PROTOBUF_client_5fmsg_2fsignal_2fsignal_5fquery_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "client_msg/common.pb.h"
// @@protoc_insertion_point(includes)
namespace external {
namespace client {
namespace signal {
class Query;
class QueryDefaultTypeInternal;
extern QueryDefaultTypeInternal _Query_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
}  // namespace signal
}  // namespace client
}  // namespace external

namespace external {
namespace client {
namespace signal {

namespace protobuf_client_5fmsg_2fsignal_2fsignal_5fquery_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_client_5fmsg_2fsignal_2fsignal_5fquery_2eproto

// ===================================================================

class Query : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:external.client.signal.Query) */ {
 public:
  Query();
  virtual ~Query();

  Query(const Query& from);

  inline Query& operator=(const Query& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Query(Query&& from) noexcept
    : Query() {
    *this = ::std::move(from);
  }

  inline Query& operator=(Query&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Query& default_instance();

  static inline const Query* internal_default_instance() {
    return reinterpret_cast<const Query*>(
               &_Query_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Query* other);
  friend void swap(Query& a, Query& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Query* New() const PROTOBUF_FINAL { return New(NULL); }

  Query* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Query& from);
  void MergeFrom(const Query& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Query* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .external.client.Signal signal = 1;
  int signal_size() const;
  void clear_signal();
  static const int kSignalFieldNumber = 1;
  const ::external::client::Signal& signal(int index) const;
  ::external::client::Signal* mutable_signal(int index);
  ::external::client::Signal* add_signal();
  ::google::protobuf::RepeatedPtrField< ::external::client::Signal >*
      mutable_signal();
  const ::google::protobuf::RepeatedPtrField< ::external::client::Signal >&
      signal() const;

  // @@protoc_insertion_point(class_scope:external.client.signal.Query)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::external::client::Signal > signal_;
  mutable int _cached_size_;
  friend struct protobuf_client_5fmsg_2fsignal_2fsignal_5fquery_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:external.client.signal.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .external.client.Signal signal = 1;
  int signal_size() const;
  void clear_signal();
  static const int kSignalFieldNumber = 1;
  const ::external::client::Signal& signal(int index) const;
  ::external::client::Signal* mutable_signal(int index);
  ::external::client::Signal* add_signal();
  ::google::protobuf::RepeatedPtrField< ::external::client::Signal >*
      mutable_signal();
  const ::google::protobuf::RepeatedPtrField< ::external::client::Signal >&
      signal() const;

  // @@protoc_insertion_point(class_scope:external.client.signal.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::external::client::Signal > signal_;
  mutable int _cached_size_;
  friend struct protobuf_client_5fmsg_2fsignal_2fsignal_5fquery_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Query

// repeated .external.client.Signal signal = 1;
inline int Query::signal_size() const {
  return signal_.size();
}
inline void Query::clear_signal() {
  signal_.Clear();
}
inline const ::external::client::Signal& Query::signal(int index) const {
  // @@protoc_insertion_point(field_get:external.client.signal.Query.signal)
  return signal_.Get(index);
}
inline ::external::client::Signal* Query::mutable_signal(int index) {
  // @@protoc_insertion_point(field_mutable:external.client.signal.Query.signal)
  return signal_.Mutable(index);
}
inline ::external::client::Signal* Query::add_signal() {
  // @@protoc_insertion_point(field_add:external.client.signal.Query.signal)
  return signal_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::external::client::Signal >*
Query::mutable_signal() {
  // @@protoc_insertion_point(field_mutable_list:external.client.signal.Query.signal)
  return &signal_;
}
inline const ::google::protobuf::RepeatedPtrField< ::external::client::Signal >&
Query::signal() const {
  // @@protoc_insertion_point(field_list:external.client.signal.Query.signal)
  return signal_;
}

// -------------------------------------------------------------------

// Response

// repeated .external.client.Signal signal = 1;
inline int Response::signal_size() const {
  return signal_.size();
}
inline void Response::clear_signal() {
  signal_.Clear();
}
inline const ::external::client::Signal& Response::signal(int index) const {
  // @@protoc_insertion_point(field_get:external.client.signal.Response.signal)
  return signal_.Get(index);
}
inline ::external::client::Signal* Response::mutable_signal(int index) {
  // @@protoc_insertion_point(field_mutable:external.client.signal.Response.signal)
  return signal_.Mutable(index);
}
inline ::external::client::Signal* Response::add_signal() {
  // @@protoc_insertion_point(field_add:external.client.signal.Response.signal)
  return signal_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::external::client::Signal >*
Response::mutable_signal() {
  // @@protoc_insertion_point(field_mutable_list:external.client.signal.Response.signal)
  return &signal_;
}
inline const ::google::protobuf::RepeatedPtrField< ::external::client::Signal >&
Response::signal() const {
  // @@protoc_insertion_point(field_list:external.client.signal.Response.signal)
  return signal_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace signal
}  // namespace client
}  // namespace external

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_5fmsg_2fsignal_2fsignal_5fquery_2eproto__INCLUDED
