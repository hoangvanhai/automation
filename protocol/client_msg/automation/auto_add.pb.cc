// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_msg/automation/auto_add.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "client_msg/automation/auto_add.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace external {
namespace client {
namespace automation {
class AddDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Add>
     _instance;
} _Add_default_instance_;
class U64RangeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<U64Range>
     _instance;
} _U64Range_default_instance_;
class U32RangeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<U32Range>
     _instance;
} _U32Range_default_instance_;
class FloatRangeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FloatRange>
     _instance;
} _FloatRange_default_instance_;

namespace protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Add, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Add, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Add, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Add, frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Add, bandwidth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Add, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Add, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Add, power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Add, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(U64Range, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(U64Range, minimum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(U64Range, maximum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(U32Range, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(U32Range, minimum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(U32Range, maximum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FloatRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FloatRange, minimum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FloatRange, maximum_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Add)},
  { 13, -1, sizeof(U64Range)},
  { 20, -1, sizeof(U32Range)},
  { 27, -1, sizeof(FloatRange)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Add_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_U64Range_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_U32Range_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FloatRange_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "client_msg/automation/auto_add.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Add_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Add_default_instance_);_U64Range_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_U64Range_default_instance_);_U32Range_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_U32Range_default_instance_);_FloatRange_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FloatRange_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n$client_msg/automation/auto_add.proto\022\032"
      "external.client.automation\"\311\002\n\003Add\022\n\n\002id"
      "\030\001 \001(\r\022\016\n\006target\030\002 \001(\r\0227\n\tfrequency\030\003 \003("
      "\0132$.external.client.automation.U64Range\022"
      "7\n\tbandwidth\030\004 \003(\0132$.external.client.aut"
      "omation.U32Range\0227\n\ttimestamp\030\005 \003(\0132$.ex"
      "ternal.client.automation.U64Range\0226\n\010dur"
      "ation\030\006 \003(\0132$.external.client.automation"
      ".U64Range\0225\n\005power\030\007 \003(\0132&.external.clie"
      "nt.automation.FloatRange\022\014\n\004type\030\010 \003(\r\","
      "\n\010U64Range\022\017\n\007minimum\030\001 \001(\004\022\017\n\007maximum\030\002"
      " \001(\004\",\n\010U32Range\022\017\n\007minimum\030\001 \001(\r\022\017\n\007max"
      "imum\030\002 \001(\r\".\n\nFloatRange\022\017\n\007minimum\030\001 \001("
      "\002\022\017\n\007maximum\030\002 \001(\002*D\n\006Target\022\017\n\013TARGET_N"
      "ONE\020\000\022\n\n\006RECORD\020\001\022\014\n\010CLASSIFY\020\002\022\017\n\013GEOLO"
      "CATION\020\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 616);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "client_msg/automation/auto_add.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto

const ::google::protobuf::EnumDescriptor* Target_descriptor() {
  protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::file_level_enum_descriptors[0];
}
bool Target_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Add::kIdFieldNumber;
const int Add::kTargetFieldNumber;
const int Add::kFrequencyFieldNumber;
const int Add::kBandwidthFieldNumber;
const int Add::kTimestampFieldNumber;
const int Add::kDurationFieldNumber;
const int Add::kPowerFieldNumber;
const int Add::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Add::Add()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:external.client.automation.Add)
}
Add::Add(const Add& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      frequency_(from.frequency_),
      bandwidth_(from.bandwidth_),
      timestamp_(from.timestamp_),
      duration_(from.duration_),
      power_(from.power_),
      type_(from.type_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_) -
    reinterpret_cast<char*>(&id_)) + sizeof(target_));
  // @@protoc_insertion_point(copy_constructor:external.client.automation.Add)
}

void Add::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_) -
      reinterpret_cast<char*>(&id_)) + sizeof(target_));
  _cached_size_ = 0;
}

Add::~Add() {
  // @@protoc_insertion_point(destructor:external.client.automation.Add)
  SharedDtor();
}

void Add::SharedDtor() {
}

void Add::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Add::descriptor() {
  protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Add& Add::default_instance() {
  protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::InitDefaults();
  return *internal_default_instance();
}

Add* Add::New(::google::protobuf::Arena* arena) const {
  Add* n = new Add;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Add::Clear() {
// @@protoc_insertion_point(message_clear_start:external.client.automation.Add)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frequency_.Clear();
  bandwidth_.Clear();
  timestamp_.Clear();
  duration_.Clear();
  power_.Clear();
  type_.Clear();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_) -
      reinterpret_cast<char*>(&id_)) + sizeof(target_));
  _internal_metadata_.Clear();
}

bool Add::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:external.client.automation.Add)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .external.client.automation.U64Range frequency = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_frequency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .external.client.automation.U32Range bandwidth = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bandwidth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .external.client.automation.U64Range timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .external.client.automation.U64Range duration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .external.client.automation.FloatRange power = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_type())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_type())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:external.client.automation.Add)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:external.client.automation.Add)
  return false;
#undef DO_
}

void Add::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:external.client.automation.Add)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 target = 2;
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target(), output);
  }

  // repeated .external.client.automation.U64Range frequency = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frequency_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->frequency(static_cast<int>(i)), output);
  }

  // repeated .external.client.automation.U32Range bandwidth = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bandwidth_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->bandwidth(static_cast<int>(i)), output);
  }

  // repeated .external.client.automation.U64Range timestamp = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timestamp_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->timestamp(static_cast<int>(i)), output);
  }

  // repeated .external.client.automation.U64Range duration = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->duration_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->duration(static_cast<int>(i)), output);
  }

  // repeated .external.client.automation.FloatRange power = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->power_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->power(static_cast<int>(i)), output);
  }

  // repeated uint32 type = 8;
  if (this->type_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _type_cached_byte_size_));
  }
  for (int i = 0, n = this->type_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->type(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:external.client.automation.Add)
}

::google::protobuf::uint8* Add::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:external.client.automation.Add)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // uint32 target = 2;
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target(), target);
  }

  // repeated .external.client.automation.U64Range frequency = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frequency_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->frequency(static_cast<int>(i)), deterministic, target);
  }

  // repeated .external.client.automation.U32Range bandwidth = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bandwidth_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->bandwidth(static_cast<int>(i)), deterministic, target);
  }

  // repeated .external.client.automation.U64Range timestamp = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timestamp_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->timestamp(static_cast<int>(i)), deterministic, target);
  }

  // repeated .external.client.automation.U64Range duration = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->duration_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->duration(static_cast<int>(i)), deterministic, target);
  }

  // repeated .external.client.automation.FloatRange power = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->power_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->power(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 type = 8;
  if (this->type_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _type_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->type_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:external.client.automation.Add)
  return target;
}

size_t Add::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:external.client.automation.Add)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .external.client.automation.U64Range frequency = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->frequency_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->frequency(static_cast<int>(i)));
    }
  }

  // repeated .external.client.automation.U32Range bandwidth = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->bandwidth_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bandwidth(static_cast<int>(i)));
    }
  }

  // repeated .external.client.automation.U64Range timestamp = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->timestamp_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->timestamp(static_cast<int>(i)));
    }
  }

  // repeated .external.client.automation.U64Range duration = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->duration_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->duration(static_cast<int>(i)));
    }
  }

  // repeated .external.client.automation.FloatRange power = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->power_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->power(static_cast<int>(i)));
    }
  }

  // repeated uint32 type = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->type_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _type_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 target = 2;
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Add::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:external.client.automation.Add)
  GOOGLE_DCHECK_NE(&from, this);
  const Add* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Add>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:external.client.automation.Add)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:external.client.automation.Add)
    MergeFrom(*source);
  }
}

void Add::MergeFrom(const Add& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:external.client.automation.Add)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  frequency_.MergeFrom(from.frequency_);
  bandwidth_.MergeFrom(from.bandwidth_);
  timestamp_.MergeFrom(from.timestamp_);
  duration_.MergeFrom(from.duration_);
  power_.MergeFrom(from.power_);
  type_.MergeFrom(from.type_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.target() != 0) {
    set_target(from.target());
  }
}

void Add::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:external.client.automation.Add)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Add::CopyFrom(const Add& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:external.client.automation.Add)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Add::IsInitialized() const {
  return true;
}

void Add::Swap(Add* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Add::InternalSwap(Add* other) {
  using std::swap;
  frequency_.InternalSwap(&other->frequency_);
  bandwidth_.InternalSwap(&other->bandwidth_);
  timestamp_.InternalSwap(&other->timestamp_);
  duration_.InternalSwap(&other->duration_);
  power_.InternalSwap(&other->power_);
  type_.InternalSwap(&other->type_);
  swap(id_, other->id_);
  swap(target_, other->target_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Add::GetMetadata() const {
  protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Add

// uint32 id = 1;
void Add::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 Add::id() const {
  // @@protoc_insertion_point(field_get:external.client.automation.Add.id)
  return id_;
}
void Add::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:external.client.automation.Add.id)
}

// uint32 target = 2;
void Add::clear_target() {
  target_ = 0u;
}
::google::protobuf::uint32 Add::target() const {
  // @@protoc_insertion_point(field_get:external.client.automation.Add.target)
  return target_;
}
void Add::set_target(::google::protobuf::uint32 value) {
  
  target_ = value;
  // @@protoc_insertion_point(field_set:external.client.automation.Add.target)
}

// repeated .external.client.automation.U64Range frequency = 3;
int Add::frequency_size() const {
  return frequency_.size();
}
void Add::clear_frequency() {
  frequency_.Clear();
}
const ::external::client::automation::U64Range& Add::frequency(int index) const {
  // @@protoc_insertion_point(field_get:external.client.automation.Add.frequency)
  return frequency_.Get(index);
}
::external::client::automation::U64Range* Add::mutable_frequency(int index) {
  // @@protoc_insertion_point(field_mutable:external.client.automation.Add.frequency)
  return frequency_.Mutable(index);
}
::external::client::automation::U64Range* Add::add_frequency() {
  // @@protoc_insertion_point(field_add:external.client.automation.Add.frequency)
  return frequency_.Add();
}
::google::protobuf::RepeatedPtrField< ::external::client::automation::U64Range >*
Add::mutable_frequency() {
  // @@protoc_insertion_point(field_mutable_list:external.client.automation.Add.frequency)
  return &frequency_;
}
const ::google::protobuf::RepeatedPtrField< ::external::client::automation::U64Range >&
Add::frequency() const {
  // @@protoc_insertion_point(field_list:external.client.automation.Add.frequency)
  return frequency_;
}

// repeated .external.client.automation.U32Range bandwidth = 4;
int Add::bandwidth_size() const {
  return bandwidth_.size();
}
void Add::clear_bandwidth() {
  bandwidth_.Clear();
}
const ::external::client::automation::U32Range& Add::bandwidth(int index) const {
  // @@protoc_insertion_point(field_get:external.client.automation.Add.bandwidth)
  return bandwidth_.Get(index);
}
::external::client::automation::U32Range* Add::mutable_bandwidth(int index) {
  // @@protoc_insertion_point(field_mutable:external.client.automation.Add.bandwidth)
  return bandwidth_.Mutable(index);
}
::external::client::automation::U32Range* Add::add_bandwidth() {
  // @@protoc_insertion_point(field_add:external.client.automation.Add.bandwidth)
  return bandwidth_.Add();
}
::google::protobuf::RepeatedPtrField< ::external::client::automation::U32Range >*
Add::mutable_bandwidth() {
  // @@protoc_insertion_point(field_mutable_list:external.client.automation.Add.bandwidth)
  return &bandwidth_;
}
const ::google::protobuf::RepeatedPtrField< ::external::client::automation::U32Range >&
Add::bandwidth() const {
  // @@protoc_insertion_point(field_list:external.client.automation.Add.bandwidth)
  return bandwidth_;
}

// repeated .external.client.automation.U64Range timestamp = 5;
int Add::timestamp_size() const {
  return timestamp_.size();
}
void Add::clear_timestamp() {
  timestamp_.Clear();
}
const ::external::client::automation::U64Range& Add::timestamp(int index) const {
  // @@protoc_insertion_point(field_get:external.client.automation.Add.timestamp)
  return timestamp_.Get(index);
}
::external::client::automation::U64Range* Add::mutable_timestamp(int index) {
  // @@protoc_insertion_point(field_mutable:external.client.automation.Add.timestamp)
  return timestamp_.Mutable(index);
}
::external::client::automation::U64Range* Add::add_timestamp() {
  // @@protoc_insertion_point(field_add:external.client.automation.Add.timestamp)
  return timestamp_.Add();
}
::google::protobuf::RepeatedPtrField< ::external::client::automation::U64Range >*
Add::mutable_timestamp() {
  // @@protoc_insertion_point(field_mutable_list:external.client.automation.Add.timestamp)
  return &timestamp_;
}
const ::google::protobuf::RepeatedPtrField< ::external::client::automation::U64Range >&
Add::timestamp() const {
  // @@protoc_insertion_point(field_list:external.client.automation.Add.timestamp)
  return timestamp_;
}

// repeated .external.client.automation.U64Range duration = 6;
int Add::duration_size() const {
  return duration_.size();
}
void Add::clear_duration() {
  duration_.Clear();
}
const ::external::client::automation::U64Range& Add::duration(int index) const {
  // @@protoc_insertion_point(field_get:external.client.automation.Add.duration)
  return duration_.Get(index);
}
::external::client::automation::U64Range* Add::mutable_duration(int index) {
  // @@protoc_insertion_point(field_mutable:external.client.automation.Add.duration)
  return duration_.Mutable(index);
}
::external::client::automation::U64Range* Add::add_duration() {
  // @@protoc_insertion_point(field_add:external.client.automation.Add.duration)
  return duration_.Add();
}
::google::protobuf::RepeatedPtrField< ::external::client::automation::U64Range >*
Add::mutable_duration() {
  // @@protoc_insertion_point(field_mutable_list:external.client.automation.Add.duration)
  return &duration_;
}
const ::google::protobuf::RepeatedPtrField< ::external::client::automation::U64Range >&
Add::duration() const {
  // @@protoc_insertion_point(field_list:external.client.automation.Add.duration)
  return duration_;
}

// repeated .external.client.automation.FloatRange power = 7;
int Add::power_size() const {
  return power_.size();
}
void Add::clear_power() {
  power_.Clear();
}
const ::external::client::automation::FloatRange& Add::power(int index) const {
  // @@protoc_insertion_point(field_get:external.client.automation.Add.power)
  return power_.Get(index);
}
::external::client::automation::FloatRange* Add::mutable_power(int index) {
  // @@protoc_insertion_point(field_mutable:external.client.automation.Add.power)
  return power_.Mutable(index);
}
::external::client::automation::FloatRange* Add::add_power() {
  // @@protoc_insertion_point(field_add:external.client.automation.Add.power)
  return power_.Add();
}
::google::protobuf::RepeatedPtrField< ::external::client::automation::FloatRange >*
Add::mutable_power() {
  // @@protoc_insertion_point(field_mutable_list:external.client.automation.Add.power)
  return &power_;
}
const ::google::protobuf::RepeatedPtrField< ::external::client::automation::FloatRange >&
Add::power() const {
  // @@protoc_insertion_point(field_list:external.client.automation.Add.power)
  return power_;
}

// repeated uint32 type = 8;
int Add::type_size() const {
  return type_.size();
}
void Add::clear_type() {
  type_.Clear();
}
::google::protobuf::uint32 Add::type(int index) const {
  // @@protoc_insertion_point(field_get:external.client.automation.Add.type)
  return type_.Get(index);
}
void Add::set_type(int index, ::google::protobuf::uint32 value) {
  type_.Set(index, value);
  // @@protoc_insertion_point(field_set:external.client.automation.Add.type)
}
void Add::add_type(::google::protobuf::uint32 value) {
  type_.Add(value);
  // @@protoc_insertion_point(field_add:external.client.automation.Add.type)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Add::type() const {
  // @@protoc_insertion_point(field_list:external.client.automation.Add.type)
  return type_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Add::mutable_type() {
  // @@protoc_insertion_point(field_mutable_list:external.client.automation.Add.type)
  return &type_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int U64Range::kMinimumFieldNumber;
const int U64Range::kMaximumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

U64Range::U64Range()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:external.client.automation.U64Range)
}
U64Range::U64Range(const U64Range& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&minimum_, &from.minimum_,
    static_cast<size_t>(reinterpret_cast<char*>(&maximum_) -
    reinterpret_cast<char*>(&minimum_)) + sizeof(maximum_));
  // @@protoc_insertion_point(copy_constructor:external.client.automation.U64Range)
}

void U64Range::SharedCtor() {
  ::memset(&minimum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maximum_) -
      reinterpret_cast<char*>(&minimum_)) + sizeof(maximum_));
  _cached_size_ = 0;
}

U64Range::~U64Range() {
  // @@protoc_insertion_point(destructor:external.client.automation.U64Range)
  SharedDtor();
}

void U64Range::SharedDtor() {
}

void U64Range::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* U64Range::descriptor() {
  protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const U64Range& U64Range::default_instance() {
  protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::InitDefaults();
  return *internal_default_instance();
}

U64Range* U64Range::New(::google::protobuf::Arena* arena) const {
  U64Range* n = new U64Range;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void U64Range::Clear() {
// @@protoc_insertion_point(message_clear_start:external.client.automation.U64Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&minimum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maximum_) -
      reinterpret_cast<char*>(&minimum_)) + sizeof(maximum_));
  _internal_metadata_.Clear();
}

bool U64Range::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:external.client.automation.U64Range)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 minimum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &minimum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 maximum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &maximum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:external.client.automation.U64Range)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:external.client.automation.U64Range)
  return false;
#undef DO_
}

void U64Range::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:external.client.automation.U64Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 minimum = 1;
  if (this->minimum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->minimum(), output);
  }

  // uint64 maximum = 2;
  if (this->maximum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->maximum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:external.client.automation.U64Range)
}

::google::protobuf::uint8* U64Range::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:external.client.automation.U64Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 minimum = 1;
  if (this->minimum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->minimum(), target);
  }

  // uint64 maximum = 2;
  if (this->maximum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->maximum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:external.client.automation.U64Range)
  return target;
}

size_t U64Range::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:external.client.automation.U64Range)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 minimum = 1;
  if (this->minimum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->minimum());
  }

  // uint64 maximum = 2;
  if (this->maximum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->maximum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void U64Range::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:external.client.automation.U64Range)
  GOOGLE_DCHECK_NE(&from, this);
  const U64Range* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const U64Range>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:external.client.automation.U64Range)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:external.client.automation.U64Range)
    MergeFrom(*source);
  }
}

void U64Range::MergeFrom(const U64Range& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:external.client.automation.U64Range)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.minimum() != 0) {
    set_minimum(from.minimum());
  }
  if (from.maximum() != 0) {
    set_maximum(from.maximum());
  }
}

void U64Range::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:external.client.automation.U64Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void U64Range::CopyFrom(const U64Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:external.client.automation.U64Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool U64Range::IsInitialized() const {
  return true;
}

void U64Range::Swap(U64Range* other) {
  if (other == this) return;
  InternalSwap(other);
}
void U64Range::InternalSwap(U64Range* other) {
  using std::swap;
  swap(minimum_, other->minimum_);
  swap(maximum_, other->maximum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata U64Range::GetMetadata() const {
  protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// U64Range

// uint64 minimum = 1;
void U64Range::clear_minimum() {
  minimum_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 U64Range::minimum() const {
  // @@protoc_insertion_point(field_get:external.client.automation.U64Range.minimum)
  return minimum_;
}
void U64Range::set_minimum(::google::protobuf::uint64 value) {
  
  minimum_ = value;
  // @@protoc_insertion_point(field_set:external.client.automation.U64Range.minimum)
}

// uint64 maximum = 2;
void U64Range::clear_maximum() {
  maximum_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 U64Range::maximum() const {
  // @@protoc_insertion_point(field_get:external.client.automation.U64Range.maximum)
  return maximum_;
}
void U64Range::set_maximum(::google::protobuf::uint64 value) {
  
  maximum_ = value;
  // @@protoc_insertion_point(field_set:external.client.automation.U64Range.maximum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int U32Range::kMinimumFieldNumber;
const int U32Range::kMaximumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

U32Range::U32Range()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:external.client.automation.U32Range)
}
U32Range::U32Range(const U32Range& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&minimum_, &from.minimum_,
    static_cast<size_t>(reinterpret_cast<char*>(&maximum_) -
    reinterpret_cast<char*>(&minimum_)) + sizeof(maximum_));
  // @@protoc_insertion_point(copy_constructor:external.client.automation.U32Range)
}

void U32Range::SharedCtor() {
  ::memset(&minimum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maximum_) -
      reinterpret_cast<char*>(&minimum_)) + sizeof(maximum_));
  _cached_size_ = 0;
}

U32Range::~U32Range() {
  // @@protoc_insertion_point(destructor:external.client.automation.U32Range)
  SharedDtor();
}

void U32Range::SharedDtor() {
}

void U32Range::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* U32Range::descriptor() {
  protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const U32Range& U32Range::default_instance() {
  protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::InitDefaults();
  return *internal_default_instance();
}

U32Range* U32Range::New(::google::protobuf::Arena* arena) const {
  U32Range* n = new U32Range;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void U32Range::Clear() {
// @@protoc_insertion_point(message_clear_start:external.client.automation.U32Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&minimum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maximum_) -
      reinterpret_cast<char*>(&minimum_)) + sizeof(maximum_));
  _internal_metadata_.Clear();
}

bool U32Range::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:external.client.automation.U32Range)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 minimum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minimum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 maximum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maximum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:external.client.automation.U32Range)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:external.client.automation.U32Range)
  return false;
#undef DO_
}

void U32Range::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:external.client.automation.U32Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 minimum = 1;
  if (this->minimum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->minimum(), output);
  }

  // uint32 maximum = 2;
  if (this->maximum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maximum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:external.client.automation.U32Range)
}

::google::protobuf::uint8* U32Range::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:external.client.automation.U32Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 minimum = 1;
  if (this->minimum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->minimum(), target);
  }

  // uint32 maximum = 2;
  if (this->maximum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maximum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:external.client.automation.U32Range)
  return target;
}

size_t U32Range::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:external.client.automation.U32Range)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 minimum = 1;
  if (this->minimum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minimum());
  }

  // uint32 maximum = 2;
  if (this->maximum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maximum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void U32Range::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:external.client.automation.U32Range)
  GOOGLE_DCHECK_NE(&from, this);
  const U32Range* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const U32Range>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:external.client.automation.U32Range)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:external.client.automation.U32Range)
    MergeFrom(*source);
  }
}

void U32Range::MergeFrom(const U32Range& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:external.client.automation.U32Range)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.minimum() != 0) {
    set_minimum(from.minimum());
  }
  if (from.maximum() != 0) {
    set_maximum(from.maximum());
  }
}

void U32Range::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:external.client.automation.U32Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void U32Range::CopyFrom(const U32Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:external.client.automation.U32Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool U32Range::IsInitialized() const {
  return true;
}

void U32Range::Swap(U32Range* other) {
  if (other == this) return;
  InternalSwap(other);
}
void U32Range::InternalSwap(U32Range* other) {
  using std::swap;
  swap(minimum_, other->minimum_);
  swap(maximum_, other->maximum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata U32Range::GetMetadata() const {
  protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// U32Range

// uint32 minimum = 1;
void U32Range::clear_minimum() {
  minimum_ = 0u;
}
::google::protobuf::uint32 U32Range::minimum() const {
  // @@protoc_insertion_point(field_get:external.client.automation.U32Range.minimum)
  return minimum_;
}
void U32Range::set_minimum(::google::protobuf::uint32 value) {
  
  minimum_ = value;
  // @@protoc_insertion_point(field_set:external.client.automation.U32Range.minimum)
}

// uint32 maximum = 2;
void U32Range::clear_maximum() {
  maximum_ = 0u;
}
::google::protobuf::uint32 U32Range::maximum() const {
  // @@protoc_insertion_point(field_get:external.client.automation.U32Range.maximum)
  return maximum_;
}
void U32Range::set_maximum(::google::protobuf::uint32 value) {
  
  maximum_ = value;
  // @@protoc_insertion_point(field_set:external.client.automation.U32Range.maximum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatRange::kMinimumFieldNumber;
const int FloatRange::kMaximumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatRange::FloatRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:external.client.automation.FloatRange)
}
FloatRange::FloatRange(const FloatRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&minimum_, &from.minimum_,
    static_cast<size_t>(reinterpret_cast<char*>(&maximum_) -
    reinterpret_cast<char*>(&minimum_)) + sizeof(maximum_));
  // @@protoc_insertion_point(copy_constructor:external.client.automation.FloatRange)
}

void FloatRange::SharedCtor() {
  ::memset(&minimum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maximum_) -
      reinterpret_cast<char*>(&minimum_)) + sizeof(maximum_));
  _cached_size_ = 0;
}

FloatRange::~FloatRange() {
  // @@protoc_insertion_point(destructor:external.client.automation.FloatRange)
  SharedDtor();
}

void FloatRange::SharedDtor() {
}

void FloatRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FloatRange::descriptor() {
  protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FloatRange& FloatRange::default_instance() {
  protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::InitDefaults();
  return *internal_default_instance();
}

FloatRange* FloatRange::New(::google::protobuf::Arena* arena) const {
  FloatRange* n = new FloatRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FloatRange::Clear() {
// @@protoc_insertion_point(message_clear_start:external.client.automation.FloatRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&minimum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maximum_) -
      reinterpret_cast<char*>(&minimum_)) + sizeof(maximum_));
  _internal_metadata_.Clear();
}

bool FloatRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:external.client.automation.FloatRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float minimum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &minimum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float maximum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &maximum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:external.client.automation.FloatRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:external.client.automation.FloatRange)
  return false;
#undef DO_
}

void FloatRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:external.client.automation.FloatRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float minimum = 1;
  if (this->minimum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->minimum(), output);
  }

  // float maximum = 2;
  if (this->maximum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->maximum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:external.client.automation.FloatRange)
}

::google::protobuf::uint8* FloatRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:external.client.automation.FloatRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float minimum = 1;
  if (this->minimum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->minimum(), target);
  }

  // float maximum = 2;
  if (this->maximum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->maximum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:external.client.automation.FloatRange)
  return target;
}

size_t FloatRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:external.client.automation.FloatRange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float minimum = 1;
  if (this->minimum() != 0) {
    total_size += 1 + 4;
  }

  // float maximum = 2;
  if (this->maximum() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FloatRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:external.client.automation.FloatRange)
  GOOGLE_DCHECK_NE(&from, this);
  const FloatRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FloatRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:external.client.automation.FloatRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:external.client.automation.FloatRange)
    MergeFrom(*source);
  }
}

void FloatRange::MergeFrom(const FloatRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:external.client.automation.FloatRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.minimum() != 0) {
    set_minimum(from.minimum());
  }
  if (from.maximum() != 0) {
    set_maximum(from.maximum());
  }
}

void FloatRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:external.client.automation.FloatRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FloatRange::CopyFrom(const FloatRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:external.client.automation.FloatRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatRange::IsInitialized() const {
  return true;
}

void FloatRange::Swap(FloatRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FloatRange::InternalSwap(FloatRange* other) {
  using std::swap;
  swap(minimum_, other->minimum_);
  swap(maximum_, other->maximum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FloatRange::GetMetadata() const {
  protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fmsg_2fautomation_2fauto_5fadd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FloatRange

// float minimum = 1;
void FloatRange::clear_minimum() {
  minimum_ = 0;
}
float FloatRange::minimum() const {
  // @@protoc_insertion_point(field_get:external.client.automation.FloatRange.minimum)
  return minimum_;
}
void FloatRange::set_minimum(float value) {
  
  minimum_ = value;
  // @@protoc_insertion_point(field_set:external.client.automation.FloatRange.minimum)
}

// float maximum = 2;
void FloatRange::clear_maximum() {
  maximum_ = 0;
}
float FloatRange::maximum() const {
  // @@protoc_insertion_point(field_get:external.client.automation.FloatRange.maximum)
  return maximum_;
}
void FloatRange::set_maximum(float value) {
  
  maximum_ = value;
  // @@protoc_insertion_point(field_set:external.client.automation.FloatRange.maximum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace automation
}  // namespace client
}  // namespace external

// @@protoc_insertion_point(global_scope)
